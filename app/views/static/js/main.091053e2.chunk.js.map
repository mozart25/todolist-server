{"version":3,"sources":["actions/types.js","services/AuthService.js","components/Login.js","actions/auth.js","components/Register.js","services/AuthHeader.js","services/UserService.js","components/Profile.js","components/BoardAdmin.js","http-common.js","services/TutorialService.js","actions/tutorials.js","components/TutorialsList.js","components/About.js","components/Main.js","components/AddTutorial.js","components/Tutorial.js","helpers/history.js","App.js","actions/message.js","reducers/tutorials.js","reducers/auth.js","reducers/message.js","reducers/index.js","store.js","index.js"],"names":["CREATE_TUTORIAL","RETRIEVE_TUTORIALS","UPDATE_TUTORIAL","DELETE_TUTORIAL","DELETE_ALL_TUTORIALS","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_MESSAGE","CLEAR_MESSAGE","API_URL","username","email","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","message","useSelector","state","auth","isLoggedIn","dispatch","useDispatch","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","type","payload","user","Promise","resolve","error","toString","reject","login","history","push","catch","ref","htmlFor","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","register","authHeader","parse","getItem","get","headers","Profile","currentUser","substring","substr","id","roles","map","index","to","BoardAdmin","content","setContent","useEffect","UserService","_content","create","baseURL","params","http","put","delete","title","updateTutorial","a","TutorialDataService","res","TutorialsList","currentTutorial","setCurrentTutorial","currentIndex","setCurrentIndex","searchTitle","setSearchTitle","isAdmin","setIsAdmin","tutorials","console","log","refreshData","placeholder","onClick","tutorial","setActiveTutorial","description","skills","href","url","published","createdAt","updatedAt","About","tiers","priceMonthly","features","Main","tier","feature","AddTutorial","initialTutorialState","setTutorial","submitted","setSubmitted","handleInputChange","event","createTutorial","Tutorial","setMessage","match","updateStatus","status","createBrowserHistory","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","listen","location","includes","exact","path","component","initialState","tutorialReducer","action","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.091053e2.chunk.js","sourcesContent":["// portfolio related\nexport const CREATE_TUTORIAL = \"CREATE_TUTORIAL\";\nexport const RETRIEVE_TUTORIALS = \"RETRIEVE_TUTORIALS\";\nexport const UPDATE_TUTORIAL = \"UPDATE_TUTORIAL\";\nexport const DELETE_TUTORIAL = \"DELETE_TUTORIAL\";\nexport const DELETE_ALL_TUTORIALS = \"DELETE_ALL_TUTORIALS\";\n\n// login & logout\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\n\n// successful message\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";","import axios from \"axios\";\n\nconst API_URL = \"https://portfolio-nodejs-mysql.herokuapp.com/api/auth/\";\n// const API_URL = \"http://localhost:3000/api/auth/\";\n\nconst register = (username, email, password) => {\n    return axios.post(API_URL + \"signup\", {\n        username,\n        email,\n        password,\n    });\n};\n\nconst login = (username, password) => {\n    return axios\n        .post(API_URL + \"signin\", {\n            username,\n            password,\n        })\n        .then((response) => {\n            if (response.data.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n            }\n\n            return response.data;\n        });\n};\n\nconst logout = () => {\n    localStorage.removeItem(\"user\");\n};\n\nexport default {\n    register,\n    login,\n    logout,\n};","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n      </div>\n        );\n    }\n};\n\nconst Login = (props) => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const { isLoggedIn } = useSelector(state => state.auth);\n    const { message } = useSelector(state => state.message);\n\n    const dispatch = useDispatch();\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value;\n        setUsername(username);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        setLoading(true);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            dispatch(login(username, password))\n                .then(() => {\n                    props.history.push(\"/profile\");\n                    // window.location.reload();\n                })\n                .catch(() => {\n                    setLoading(false);\n                });\n        } else {\n            setLoading(false);\n        }\n    };\n\n    // if (isLoggedIn) {\n    //     // return props.history.push(\"/home\");\n    //     return <Redirect to=\"/home\" />;\n    // }\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleLogin} ref={form}>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <Input\n                            type=\"text\"\n                            className=\"form-control\"\n                            name=\"username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <Input\n                            type=\"password\"\n                            className=\"form-control\"\n                            name=\"password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required]}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-primary btn-block\" disabled={loading}>\n                            {loading && (\n                                <span className=\"spinner-border spinner-border-sm\"></span>\n                            )}\n                            <span>Login</span>\n                        </button>\n                    </div>\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/AuthService\";\n\nexport const register = (username, email, password) => (dispatch) => {\n    return AuthService.register(username, email, password).then(\n        (response) => {\n            dispatch({\n                type: REGISTER_SUCCESS,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: response.data.message,\n            });\n\n            return Promise.resolve();\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: REGISTER_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const login = (username, password) => (dispatch) => {\n    return AuthService.login(username, password).then(\n        (data) => {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: { user: data },\n            });\n\n            return Promise.resolve();\n        },\n        (error) => {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n\n            dispatch({\n                type: LOGIN_FAIL,\n            });\n\n            dispatch({\n                type: SET_MESSAGE,\n                payload: message,\n            });\n\n            return Promise.reject();\n        }\n    );\n};\n\nexport const logout = () => (dispatch) => {\n    AuthService.logout();\n\n    dispatch({\n        type: LOGOUT,\n    });\n};","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n      </div>\n        );\n    }\n};\n\nconst validEmail = (value) => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n      </div>\n        );\n    }\n};\n\nconst vusername = (value) => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n      </div>\n        );\n    }\n};\n\nconst vpassword = (value) => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n      </div>\n        );\n    }\n};\n\nconst Register = () => {\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [successful, setSuccessful] = useState(false);\n\n    const { message } = useSelector(state => state.message);\n    const dispatch = useDispatch();\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value;\n        setUsername(username);\n    };\n\n    const onChangeEmail = (e) => {\n        const email = e.target.value;\n        setEmail(email);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        setSuccessful(false);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            dispatch(register(username, email, password))\n                .then(() => {\n                    setSuccessful(true);\n                })\n                .catch(() => {\n                    setSuccessful(false);\n                });\n        }\n    };\n\n    return (\n        <div className=\"col-md-12\">\n            <div className=\"card card-container\">\n                <img\n                    src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n                    alt=\"profile-img\"\n                    className=\"profile-img-card\"\n                />\n\n                <Form onSubmit={handleRegister} ref={form}>\n                    {!successful && (\n                        <div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"username\"\n                                    value={username}\n                                    onChange={onChangeUsername}\n                                    validations={[required, vusername]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email</label>\n                                <Input\n                                    type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={onChangeEmail}\n                                    validations={[required, validEmail]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <Input\n                                    type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={onChangePassword}\n                                    validations={[required, vpassword]}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                            </div>\n                        </div>\n                    )}\n\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className={successful ? \"alert alert-success\" : \"alert alert-danger\"} role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n};\n\nexport default Register;","export default function authHeader() {\n    const user = JSON.parse(localStorage.getItem('user'));\n\n    if (user && user.accessToken) {\n        // for Node.js Express back-end\n        return { 'x-access-token': user.accessToken };\n    } else {\n        return {};\n    }\n}","import axios from \"axios\";\nimport authHeader from \"./AuthHeader\";\n\nconst API_URL = \"https://portfolio-nodejs-mysql.herokuapp.com/api/test/\";\n// const API_URL = \"http://localhost:3000/api/test/\";\n\nconst getPublicContent = () => {\n    return axios.get(API_URL + \"all\");\n};\n\nconst getUserBoard = () => {\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\n};\n\nconst getModeratorBoard = () => {\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\n};\n\nconst getAdminBoard = () => {\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\n};\n\nexport default {\n    getPublicContent,\n    getUserBoard,\n    getModeratorBoard,\n    getAdminBoard,\n};","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nconst Profile = () => {\n    const { user: currentUser } = useSelector((state) => state.auth);\n\n    if (!currentUser) {\n        return <Redirect to=\"/#/login\" />;\n        // return history.push(\"/login\");\n\n    }\n\n    return (\n\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>\n                    <strong>{currentUser.username}</strong> Profile\n        </h3>\n            </header>\n            <p>\n                <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n                {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n            </p>\n            <p>\n                <strong>Id:</strong> {currentUser.id}\n            </p>\n            <p>\n                <strong>Email:</strong> {currentUser.email}\n            </p>\n            <strong>Authorities:</strong>\n            <ul>\n                {currentUser.roles &&\n                    currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n            </ul>\n        </div>\n\n    );\n};\n\nexport default Profile;","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/UserService\";\n\nconst BoardAdmin = () => {\n    const [content, setContent] = useState(\"\");\n\n    useEffect(() => {\n        UserService.getAdminBoard().then(\n            (response) => {\n                setContent(response.data);\n            },\n            (error) => {\n                const _content =\n                    (error.response &&\n                        error.response.data &&\n                        error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n\n                setContent(_content);\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <header className=\"jumbotron\">\n                <h3>{content}</h3>\n            </header>\n        </div>\n    );\n};\n\nexport default BoardAdmin;","import axios from \"axios\";\n\nexport default axios.create({\n    // baseURL: \"http://localhost:3000/api/\",\n    baseURL: \"https://portfolio-nodejs-mysql.herokuapp.com/api\",\n\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n});","import http from \"../http-common\";\n\nconst getAll = (params) => {\n    return http.get(\"/tutorials\", { params });\n};\n\nconst get = id => {\n    return http.get(`/tutorials/${id}`);\n};\n\nconst create = data => {\n    return http.post(\"/tutorials\", data);\n};\n\nconst update = (id, data) => {\n    return http.put(`/tutorials/${id}`, data);\n};\n\nconst remove = id => {\n    return http.delete(`/tutorials/${id}`);\n};\n\nconst removeAll = () => {\n    return http.delete(`/tutorials`);\n};\n\nconst findByTitle = title => {\n    return http.get(`/tutorials?title=${title}`);\n};\n\nexport default {\n    getAll,\n    get,\n    create,\n    update,\n    remove,\n    removeAll,\n    findByTitle\n};","import {\n    CREATE_TUTORIAL,\n    RETRIEVE_TUTORIALS,\n    UPDATE_TUTORIAL,\n    DELETE_TUTORIAL,\n    DELETE_ALL_TUTORIALS,\n} from \"./types\";\n\nimport TutorialDataService from \"../services/TutorialService\";\n\nexport const createTutorial = (title, description, skills, url) => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.create({ title, description, skills, url });\n\n        dispatch({\n            type: CREATE_TUTORIAL,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const retrieveTutorials = () => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.getAll();\n\n        dispatch({\n            type: RETRIEVE_TUTORIALS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const updateTutorial = (id, data) => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.update(id, data);\n\n        dispatch({\n            type: UPDATE_TUTORIAL,\n            payload: data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const deleteTutorial = (id) => async (dispatch) => {\n    try {\n        await TutorialDataService.remove(id);\n\n        dispatch({\n            type: DELETE_TUTORIAL,\n            payload: { id },\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const deleteAllTutorials = () => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.removeAll();\n\n        dispatch({\n            type: DELETE_ALL_TUTORIALS,\n            payload: res.data,\n        });\n\n        return Promise.resolve(res.data);\n    } catch (err) {\n        return Promise.reject(err);\n    }\n};\n\nexport const findTutorialsByTitle = (title) => async (dispatch) => {\n    try {\n        const res = await TutorialDataService.findByTitle(title);\n\n        dispatch({\n            type: RETRIEVE_TUTORIALS,\n            payload: res.data,\n        });\n    } catch (err) {\n        console.log(err);\n    }\n};","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport UserService from \"../services/UserService\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport TutorialDataService from \"../services/TutorialService\";\n\nimport { Link } from \"react-router-dom\";\n\nimport {\n    retrieveTutorials,\n    findTutorialsByTitle,\n    deleteAllTutorials,\n} from \"../actions/tutorials\";\n\nconst TutorialsList = () => {\n\n    const { user: currentUser } = useSelector(state => state.auth);\n\n    // const [tutorials, setTutorials] = useState([]);\n    const [currentTutorial, setCurrentTutorial] = useState(null);\n    const [currentIndex, setCurrentIndex] = useState(-1);\n    const [searchTitle, setSearchTitle] = useState(\"\");\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    const [page, setPage] = useState(1);\n    const [count, setCount] = useState(0);\n    const [pageSize, setPageSize] = useState(3);\n\n    const pageSizes = [3, 6, 9];\n\n\n    const tutorials = useSelector(state => state.tutorials);\n\n\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        UserService.getAdminBoard().then(\n            (response) => {\n                setIsAdmin(true);\n            },\n            (error) => {\n                setIsAdmin(false);\n            }\n        );\n    }, []);\n\n    useEffect(() => {\n        dispatch(retrieveTutorials());\n    }, []);\n\n    // useEffect(getTutorials, [page, pageSize]);\n\n    // const retrieveTutorials = () => {\n    //     const params = getRequestParams(searchTitle, page, pageSize);\n\n    //     TutorialDataService.getAll(params)\n    //         .then((response) => {\n    //             const { tutorials, totalPages } = response.data;\n\n    //             setTutorials(tutorials);\n    //             setCount(totalPages);\n\n    //             console.log(response.data);\n    //         })\n    //         .catch((e) => {\n    //             console.log(e);\n    //         });\n    // };\n\n    // useEffect(retrieveTutorials, [page, pageSize]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n    };\n\n    const handlePageSizeChange = (event) => {\n        setPageSize(event.target.value);\n        setPage(1);\n    };\n\n\n\n\n    const onChangeSearchTitle = e => {\n        const searchTitle = e.target.value;\n        setSearchTitle(searchTitle);\n    };\n\n    const refreshData = () => {\n        setCurrentTutorial(null);\n        setCurrentIndex(-1);\n    };\n\n    const setActiveTutorial = (tutorial, index) => {\n        setCurrentTutorial(tutorial);\n        setCurrentIndex(index);\n    };\n\n    const removeAllTutorials = () => {\n        dispatch(deleteAllTutorials())\n            .then(response => {\n                console.log(response);\n                refreshData();\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const findByTitle = () => {\n        refreshData();\n        dispatch(findTutorialsByTitle(searchTitle));\n    };\n    if (!currentUser) {\n        return <Redirect to=\"/register\" />;\n    }\n    return (\n        <div className=\"list row\">\n            <div className=\"col-md-8\">\n                <div className=\"input-group mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Search by title\"\n                        value={searchTitle}\n                        onChange={onChangeSearchTitle}\n                    />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-outline-secondary\"\n                            type=\"button\"\n                            onClick={findByTitle}\n                        >\n                            Search\n            </button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"col-md-6\">\n                <h4>Portfolio List</h4>\n\n                <ul className=\"list-group\">\n                    {tutorials &&\n                        tutorials.map((tutorial, index) => (\n                            <li\n                                className={\n                                    \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                                }\n                                onClick={() => setActiveTutorial(tutorial, index)}\n                                key={index}\n                            >\n                                {tutorial.title}\n                            </li>\n                        ))}\n                </ul>\n                {isAdmin &&\n                    <button\n                        className=\"m-3 btn btn-sm btn-danger\"\n                        onClick={removeAllTutorials}\n                    >\n                        모두 삭제하기\n                </button>}\n            </div>\n            <div className=\"col-md-6\">\n                {currentTutorial ? (\n                    <div>\n                        <h4>Project</h4>\n                        <div>\n                            <label>\n                                <strong>Title:</strong>\n                            </label>{\" \"}\n                            {currentTutorial.title}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>Description:</strong>\n                            </label>{\" \"}\n                            {currentTutorial.description}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>Skills:</strong>\n                            </label>{\" \"}\n                            {currentTutorial.skills}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>Url:</strong>\n                            </label>{\" \"}\n                            <a href={currentTutorial.url}>\n                                {currentTutorial.url}\n                            </a>\n                        </div>\n                        <div>\n                            <label>\n                                <strong>Status:</strong>\n                            </label>{\" \"}\n                            {currentTutorial.published ? \"Published\" : \"Pending\"}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>CreatedAt:</strong>\n                            </label>{\" \"}\n                            {currentTutorial.createdAt}\n                        </div>\n                        <div>\n                            <label>\n                                <strong>UpdatedAt:</strong>\n                            </label>{\" \"}\n                            {currentTutorial.updatedAt}\n                        </div>\n                        {isAdmin &&\n                            <Link\n                                to={\"/tutorials/\" + currentTutorial.id}\n                                className=\"badge badge-warning\"\n                            >\n                                수정하기\n            </Link>}\n                    </div>\n                ) : (\n                        <div>\n                            <br />\n                            <p>프로젝트를 선택해 주세요!!</p>\n                        </div>\n                    )}\n            </div>\n        </div>\n        // <div className=\"list row\">\n        //     <div className=\"col-md-8\">\n        //         <div className=\"input-group mb-3\">\n        //             <input\n        //                 type=\"text\"\n        //                 className=\"form-control\"\n        //                 placeholder=\"Search by title\"\n        //                 value={searchTitle}\n        //                 onChange={onChangeSearchTitle}\n        //             />\n        //             <div className=\"input-group-append\">\n        //                 <button\n        //                     className=\"btn btn-outline-secondary\"\n        //                     type=\"button\"\n        //                     onClick={getTutorials}\n        //                 >\n        //                     Search\n        //     </button>\n        //             </div>\n        //         </div>\n        //     </div>\n        //     <div className=\"col-md-6\">\n        //         <h4>Tutorials List</h4>\n\n        //         <div className=\"mt-3\">\n        //             {\"Items per Page: \"}\n        //             <select onChange={handlePageSizeChange} value={pageSize}>\n        //                 {pageSizes.map((size) => (\n        //                     <option key={size} value={size}>\n        //                         {size}\n        //                     </option>\n        //                 ))}\n        //             </select>\n\n        //             <Pagination\n        //                 className=\"my-3\"\n        //                 count={count}\n        //                 page={page}\n        //                 siblingCount={1}\n        //                 boundaryCount={1}\n        //                 variant=\"outlined\"\n        //                 shape=\"rounded\"\n        //                 onChange={handlePageChange}\n        //             />\n        //         </div>\n\n        //         <ul className=\"list-group\">\n        //             {tutorialsreal.tutorials &&\n        //                 tutorialsreal.tutorials.map((tutorial, index) => (\n        //                     <li\n        //                         className={\n        //                             \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n        //                         }\n        //                         onClick={() => setActiveTutorial(tutorial, index)}\n        //                         key={index}\n        //                     >\n        //                         {tutorial.title}\n        //                     </li>\n        //                 ))}\n        //         </ul>\n\n        //         <button\n        //             className=\"m-3 btn btn-sm btn-danger\"\n        //             onClick={removeAllTutorials}\n        //         >\n        //             Remove All\n        // </button>\n        //     </div>\n        //     <div className=\"col-md-6\">\n        //         {currentTutorial ? (\n        //             <div>\n        //                 <h4>Tutorial</h4>\n        //                 <div>\n        //                     <label>\n        //                         <strong>Title:</strong>\n        //                     </label>{\" \"}\n        //                     {currentTutorial.title}\n        //                 </div>\n        //                 <div>\n        //                     <label>\n        //                         <strong>Description:</strong>\n        //                     </label>{\" \"}\n        //                     {currentTutorial.description}\n        //                 </div>\n        //                 <div>\n        //                     <label>\n        //                         <strong>Status:</strong>\n        //                     </label>{\" \"}\n        //                     {currentTutorial.published ? \"Published\" : \"Pending\"}\n        //                 </div>\n\n        //                 <Link\n        //                     to={\"/tutorials/\" + currentTutorial.id}\n        //                     className=\"badge badge-warning\"\n        //                 >\n        //                     Edit\n        //     </Link>\n        //             </div>\n        //         ) : (\n        //                 <div>\n        //                     <br />\n        //                     <p>Please click on a Tutorial...</p>\n        //                 </div>\n        //             )}\n        //     </div>\n        // </div>\n    );\n};\n\nexport default TutorialsList;\n\n\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nconst About = () => {\n\n    return (\n        <div className=\"bg-white\">\n            <div className=\"mx-auto py-12 px-4 max-w-7xl sm:px-6 lg:px-8 lg:py-24\">\n                <div className=\"space-y-12\">\n                    <h2 className=\"text-3xl font-extrabold tracking-tight sm:text-4xl\">About Me</h2>\n\n                    <ul className=\"space-y-12 lg:grid lg:grid-cols-2 lg:items-start lg:gap-x-8 lg:gap-y-12 lg:space-y-0\">\n                        <li>\n                            <div className=\"space-y-4 sm:grid sm:grid-cols-3 sm:gap-6 sm:space-y-0 lg:gap-8\">\n                                <div className=\"h-0 aspect-w-3 aspect-h-2 sm:aspect-w-3 sm:aspect-h-4\">\n                                    <img className=\"object-cover shadow-lg rounded-lg\" src=\"/images/profile.jpg\" alt=\"profile-image\" />\n                                </div>\n                                <div className=\"sm:col-span-2\">\n                                    <div className=\"space-y-4\">\n                                        <div className=\"text-lg leading-6 font-medium space-y-1\">\n                                            <h3>Seung Joon Lee</h3>\n                                            <p className=\"text-indigo-600\">Frontend Developer</p>\n                                        </div>\n                                        <div className=\"text-lg\">\n                                            <p className=\"text-gray-500\">Name: 이승준</p>\n                                            <p className=\"text-gray-500\">Email: mozartlee28@gmail.com</p>\n                                            <p className=\"text-gray-500\">H.P: 010-7164-7180</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </li>\n\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default About;","// import { CheckIcon } from '@heroicons/react/outline'\nimport { FcOk } from \"react-icons/fc\";\nimport { AiOutlineCheckCircle } from \"react-icons/ai\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { Link } from \"react-router-dom\";\n\nconst tiers = [\n    {\n        id: 1,\n        name: '기본 권한',\n        href: '/about',\n        priceMonthly: 0,\n        description: '프로필을 확인 할 수 있습니다.',\n        features: ['프로필 확인']\n    },\n    {\n        id: 2,\n        name: '고급 권한',\n        href: '/tutorials',\n        priceMonthly: '회원가입',\n        description: '프로필과 프로젝트를 확인할 수 있습니다.',\n        features: [\n            '프로필 확인',\n            '프로젝트 확인',\n        ]\n    },\n    {\n        id: 3,\n        name: '관리자 권한',\n        href: '#',\n        priceMonthly: '???',\n        description: '프로필과 프로젝트 그리고 취미를 확인할 수 있습니다.',\n        features: [\n            '프로필 확인',\n            '프로젝트 확인 및 수정',\n            '취미 확인',\n        ]\n    }\n]\n\n\n\nconst Main = () => {\n\n    return (\n        <div className=\"mt-12 space-y-4 sm:mt-16 sm:space-y-0 sm:grid sm:grid-cols-2 sm:gap-6 lg:max-w-4xl lg:mx-auto xl:max-w-none xl:mx-0 xl:grid-cols-3\">\n            {tiers.map((tier) => (\n                <div key={tier.name} className=\"border border-gray-200 rounded-lg shadow-sm divide-y divide-gray-200\">\n                    <div className=\"p-6\">\n                        <h2 className=\"text-lg leading-6 font-medium text-gray-900\">{tier.name}</h2>\n                        <p className=\"mt-4 text-sm text-gray-500\">{tier.description}</p>\n                        <p className=\"mt-8\">\n                            <span className=\"text-4xl font-extrabold text-gray-900\">${tier.priceMonthly}</span>{' '}\n                            <span className=\"text-base font-medium text-gray-500\">/click </span>\n                        </p>\n                        {/* <a\n                            href={tier.href}\n                            className=\"mt-8 block w-full bg-purple-600 border border-transparent rounded-md py-2 text-sm font-semibold text-white text-center hover:bg-purple-700\"\n                        >\n                            Buy {tier.name}\n                        </a> */}\n                        <Link\n                            className=\"mt-8 block w-full bg-purple-600 border border-transparent rounded-md py-2 text-sm font-semibold text-white text-center hover:bg-purple-700\"\n                            to={tier.href}\n                        >\n                            Buy {tier.name}\n                        </Link>\n                    </div>\n                    <div className=\"pt-6 pb-8 px-6\">\n                        <h3 className=\"text-xs font-medium text-gray-900 tracking-wide uppercase\">What's included</h3>\n                        <ul className=\"mt-6 space-y-4\">\n                            {tier.features.map((feature) => (\n                                <li key={feature} className=\"flex space-x-3\">\n                                    <FcOk />\n                                    <span className=\"text-sm text-gray-500\">{feature}</span>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\nimport { createTutorial } from \"../actions/tutorials\";\n\nconst AddTutorial = () => {\n\n    const { user: currentUser } = useSelector(state => state.auth);\n\n    const initialTutorialState = {\n        id: null,\n        title: \"\",\n        description: \"\",\n        skills: \"\",\n        url: \"\",\n        published: false\n    };\n    const [tutorial, setTutorial] = useState(initialTutorialState);\n    const [submitted, setSubmitted] = useState(false);\n\n    const dispatch = useDispatch();\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setTutorial({ ...tutorial, [name]: value });\n    };\n\n    const saveTutorial = () => {\n        const { title, description, skills, url } = tutorial;\n\n        dispatch(createTutorial(title, description, skills, url))\n            .then(data => {\n                setTutorial({\n                    id: data.id,\n                    title: data.title,\n                    description: data.description,\n                    skills: data.skills,\n                    url: data.url,\n                    published: data.published\n                });\n                setSubmitted(true);\n\n                console.log(data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const newTutorial = () => {\n        setTutorial(initialTutorialState);\n        setSubmitted(false);\n    };\n    if (!currentUser) {\n        return <Redirect to=\"/#/register\" />;\n    }\n\n    return (\n        <div className=\"submit-form\">\n            {submitted ? (\n                <div>\n                    <h4>You submitted successfully!</h4>\n                    <button className=\"btn btn-success\" onClick={newTutorial}>\n                        Add\n          </button>\n                </div>\n            ) : (\n                    <div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"title\"\n                                required\n                                value={tutorial.title}\n                                onChange={handleInputChange}\n                                name=\"title\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                required\n                                value={tutorial.description}\n                                onChange={handleInputChange}\n                                name=\"description\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Skills</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"skills\"\n                                required\n                                value={tutorial.skills}\n                                onChange={handleInputChange}\n                                name=\"skills\"\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Url</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"url\"\n                                required\n                                value={tutorial.url}\n                                onChange={handleInputChange}\n                                name=\"url\"\n                            />\n                        </div>\n\n                        <button onClick={saveTutorial} className=\"btn btn-success\">\n                            Submit\n          </button>\n                    </div>\n                )}\n        </div>\n    );\n};\n\nexport default AddTutorial;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateTutorial, deleteTutorial } from \"../actions/tutorials\";\nimport TutorialDataService from \"../services/TutorialService\";\nimport FileUpload from \"./FileUpload\";\nimport { Redirect } from 'react-router-dom';\n\nconst Tutorial = (props) => {\n\n    const { user: currentUser } = useSelector(state => state.auth);\n\n    const initialTutorialState = {\n        id: null,\n        title: \"\",\n        description: \"\",\n        skills: \"\",\n        url: \"\",\n        published: false\n    };\n    const [currentTutorial, setCurrentTutorial] = useState(initialTutorialState);\n    const [message, setMessage] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const getTutorial = id => {\n        console.log(\"id\", id)\n        TutorialDataService.get(id)\n            .then(response => {\n                setCurrentTutorial(response.data);\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    useEffect(() => {\n        getTutorial(props.match.params.id);\n    }, [props.match.params.id]);\n\n    const handleInputChange = event => {\n        const { name, value } = event.target;\n        setCurrentTutorial({ ...currentTutorial, [name]: value });\n    };\n\n    const updateStatus = status => {\n        const data = {\n            id: currentTutorial.id,\n            title: currentTutorial.title,\n            description: currentTutorial.description,\n            skills: currentTutorial.skills,\n            url: currentTutorial.url,\n            published: status\n        };\n\n        dispatch(updateTutorial(currentTutorial.id, data))\n            .then(response => {\n                console.log(response);\n\n                setCurrentTutorial({ ...currentTutorial, published: status });\n                setMessage(\"The status was updated successfully!\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const updateContent = () => {\n        dispatch(updateTutorial(currentTutorial.id, currentTutorial))\n            .then(response => {\n                console.log(response);\n\n                setMessage(\"The tutorial was updated successfully!\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    const removeTutorial = () => {\n        dispatch(deleteTutorial(currentTutorial.id))\n            .then(() => {\n                props.history.push(\"/tutorials\");\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    };\n\n    if (!currentUser) {\n        return <Redirect to=\"/login\" />;\n    }\n\n    return (\n        <div>\n            {currentTutorial ? (\n                <div className=\"edit-form\">\n                    <h4>Tutorial</h4>\n                    <form>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"title\">Title</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"title\"\n                                name=\"title\"\n                                value={currentTutorial.title}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Description</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"description\"\n                                name=\"description\"\n                                value={currentTutorial.description}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Skills</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"skills\"\n                                name=\"skills\"\n                                value={currentTutorial.skills}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"description\">Url</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                id=\"url\"\n                                name=\"url\"\n                                value={currentTutorial.url}\n                                onChange={handleInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>\n                                <strong>Status:</strong>\n                            </label>\n                            {currentTutorial.published ? \"Published\" : \"Pending\"}\n                        </div>\n                    </form>\n                    {/* <FileUpload /> */}\n                    {currentTutorial.published ? (\n                        <button\n                            className=\"badge badge-primary mr-2\"\n                            onClick={() => updateStatus(false)}\n                        >\n                            UnPublish\n            </button>\n                    ) : (\n                            <button\n                                className=\"badge badge-primary mr-2\"\n                                onClick={() => updateStatus(true)}\n                            >\n                                Publish\n            </button>\n                        )}\n\n                    <button className=\"badge badge-danger mr-2\" onClick={removeTutorial}>\n                        Delete\n          </button>\n\n                    <button\n                        type=\"submit\"\n                        className=\"badge badge-success\"\n                        onClick={updateContent}\n                    >\n                        Update\n          </button>\n                    <p>{message}</p>\n                </div>\n            ) : (\n                    <div>\n                        <br />\n                        <p>프로젝트를 선택해 주세요...</p>\n                    </div>\n                )}\n        </div>);\n};\n\nexport default Tutorial;","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();","// import React from \"react\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"./App.css\";\n\n// import AddTutorial from \"./components/AddTutorial\";\n// import Tutorial from \"./components/Tutorial\";\n// import TutorialsList from \"./components/TutorialsList\";\n\n// function App() {\n//   return (\n//     <Router>\n//       <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n//         <a href=\"/tutorials\" className=\"navbar-brand\">\n//           LEE\n//         </a>\n//         <div className=\"navbar-nav mr-auto\">\n//           <li className=\"nav-item\">\n//             <Link to={\"/tutorials\"} className=\"nav-link\">\n//               Portfolios\n//             </Link>\n//           </li>\n//           <li className=\"nav-item\">\n//             <Link to={\"/add\"} className=\"nav-link\">\n//               Add\n//             </Link>\n//           </li>\n//         </div>\n//       </nav>\n\n//       <div className=\"container mt-3\">\n//         <Switch>\n//           <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n//           <Route exact path=\"/add\" component={AddTutorial} />\n//           <Route path=\"/tutorials/:id\" component={Tutorial} />\n//         </Switch>\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport BoardUser from \"./components/BoardUser\";\nimport BoardModerator from \"./components/BoardModerator\";\nimport BoardAdmin from \"./components/BoardAdmin\";\nimport TutorialsList from \"./components/TutorialsList\";\nimport About from \"./components/About\";\nimport Main from \"./components/Main\";\nimport AddTutorial from \"./components/AddTutorial\";\nimport Tutorial from \"./components/Tutorial\";\n\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\n\nimport { history } from \"./helpers/history\";\n\nconst App = () => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_MODERATOR\"));\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\n    }\n  }, [currentUser]);\n\n  const logOut = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-white bg-white\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            LEE\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/about\"} className=\"nav-link\">\n                {/* <Link to={\"/tutorials\"} className=\"nav-link\"> */}\n                About\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/tutorials\"} className=\"nav-link\">\n                  Project\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Add\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    Login\n                </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    Sign Up\n                </Link>\n                </li>\n              </div>\n            )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Main} />\n            {/* <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} /> */}\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            {/* <Route path=\"/user\" component={BoardUser} /> */}\n            <Route exact path=\"/tutorials\" component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n    type: SET_MESSAGE,\n    payload: message,\n});\n\nexport const clearMessage = () => ({\n    type: CLEAR_MESSAGE,\n});","import {\n    CREATE_TUTORIAL,\n    RETRIEVE_TUTORIALS,\n    UPDATE_TUTORIAL,\n    DELETE_TUTORIAL,\n    DELETE_ALL_TUTORIALS,\n} from \"../actions/types\";\n\nconst initialState = [];\n\nfunction tutorialReducer(tutorials = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case CREATE_TUTORIAL:\n            return [...tutorials, payload];\n\n        case RETRIEVE_TUTORIALS:\n            return payload;\n\n        case UPDATE_TUTORIAL:\n            return tutorials.map((tutorial) => {\n                if (tutorial.id === payload.id) {\n                    return {\n                        ...tutorial,\n                        ...payload,\n                    };\n                } else {\n                    return tutorial;\n                }\n            });\n\n        case DELETE_TUTORIAL:\n            return tutorials.filter(({ id }) => id !== payload.id);\n\n        case DELETE_ALL_TUTORIALS:\n            return [];\n\n        default:\n            return tutorials;\n    }\n};\n\nexport default tutorialReducer;","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n    ? { isLoggedIn: true, user }\n    : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: false,\n            };\n        case REGISTER_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n            };\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                user: payload.user,\n            };\n        case LOGIN_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        case LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                user: null,\n            };\n        default:\n            return state;\n    }\n}","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case SET_MESSAGE:\n            return { message: payload };\n\n        case CLEAR_MESSAGE:\n            return { message: \"\" };\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport tutorials from \"./tutorials\";\nimport auth from \"./auth\";\nimport message from \"./message\";\n\nexport default combineReducers({\n    tutorials,\n    auth,\n    message\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport './index.css';\n\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}